# Как сделать reset RabbitMQ?

Иногда бывает необходимо просто удалить всё с сервера RabbitMQ и запустить его заново, в "чистом" виде. 
Несмотря на то, что RabbitMQ чрезвычайно стабилен, в некоторых редких случаях требуется полностью сбросить RabbitMQ после обнаружения таких ошибок, как, например, 
поврежденные данные, или ноды, окончательно выпавшие из кластера, и тому подобное.
Проще всего удалить и пересоздать vhost, который навсегда очистит все объекты, такие как очереди, полиcи, биндинги и т. д. Как это сделать, и как использовать 
reset и force_reset.

## Пересоздание виртуального хоста из командной строки

Чтобы удалить поврежденные данные не нужно перезагружать ноду RabbitMQ, удаление виртуального хоста удалит все данные из БД, сохраняя при этом состояние кластера 
и информацию о пользователях.

Чтобы удалить виртуальный хост с именем damaged_vhost:

    delete_vhost damaged_vhost
    add_vhost damaged_vhost
    
Эти команды удаляют и добавляют файл damaged_vhost. Все связанные queues, exchanges и messages удаляются из брокера, не затрагивая пользователей.

## Пересоздание виртуального хоста из консоли управления (web-интерфейса)

Консоль управления позволяет удалять и создавать виртуальные хосты без использования командной строки. В качестве примера у нас есть очередь reset_queue и обменник reset_exchange.

Очередь и обменник находятся под виртуальным хостом с именем damaged_vhost, как показано на рисунке ниже:


== рисунок вставить ==

Кликните по виртуальному хосту reset_vhost по пути /vhosts, а затем нажмите кнопку "Delete this Virtual Host" внизу страницы. Нажмите ОК, если RabbitMQ запросит подтверждение.
Брокер удалит виртуальный хост и всю связанную с ним структуру. Действие не повлияет на подключенных пользователей, оно просто удаляет виртуальный хост.

## Как сбросить мою ноду RabbitMQ?
В RabbitMQ есть команды reset и force_reset, которые можно выполнить через [rabbitmqctl](https://www.rabbitmq.com/rabbitmqctl.8.html) для сброса одной ноды. 
Введите следующие команды, чтобы корректно перезагрузить сервер:
